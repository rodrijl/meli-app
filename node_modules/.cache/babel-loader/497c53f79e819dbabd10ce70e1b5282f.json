{"ast":null,"code":"import { START_GET_PRODUCTS, SUCCES_GET_PRODUCTS, ERROR_GET_PRODUCTS, START_GET_PRODUCT_DETAILS, SUCCES_GET_PRODUCT_DETAILS, ERROR_GET_PRODUCT_DETAILS } from '../actiontypes/index';\nconst url = 'http://localhost:8080';\n\nconst getProducts = async (dispatch, searchText) => {\n  try {\n    dispatch({\n      type: START_GET_PRODUCTS\n    });\n    const result = await fetch(`${url}/items?q=${searchText}`);\n    const response = await result.json(); // always only save first 4 elements on the store\n\n    const results = response.data.products.slice(0, 4);\n    let filters = response.data.categories || [];\n    dispatch({\n      type: SUCCES_GET_PRODUCTS,\n      products: results,\n      filters\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_GET_PRODUCTS\n    });\n    throw err;\n  }\n\n  ;\n};\n\nconst getProductDetail = async (dispatch, productId) => {\n  try {\n    dispatch({\n      type: START_GET_PRODUCT_DETAILS\n    });\n    const result = await fetch(`${url}/items/${productId}`);\n    const response = await result.json();\n    debugger;\n    dispatch({\n      type: SUCCES_GET_PRODUCT_DETAILS,\n      productDetail: response.data,\n      filters: response.data.categories\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_GET_PRODUCT_DETAILS\n    });\n  }\n\n  ;\n};\n\nexport { getProducts, getProductDetail };","map":{"version":3,"sources":["/home/rodrigo/Escritorio/meli/meli-app/src/actions/actions.js"],"names":["START_GET_PRODUCTS","SUCCES_GET_PRODUCTS","ERROR_GET_PRODUCTS","START_GET_PRODUCT_DETAILS","SUCCES_GET_PRODUCT_DETAILS","ERROR_GET_PRODUCT_DETAILS","url","getProducts","dispatch","searchText","type","result","fetch","response","json","results","data","products","slice","filters","categories","err","getProductDetail","productId","productDetail"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,yBAJJ,EAKIC,0BALJ,EAMIC,yBANJ,QAOO,sBAPP;AASA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,WAAW,GAAG,OAAOC,QAAP,EAAiBC,UAAjB,KAAgC;AAChD,MAAG;AACCD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGA,UAAMW,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,YAAWG,UAAW,EAA9B,CAA1B;AACA,UAAMI,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAvB,CALD,CAOC;;AACA,UAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcC,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAAhB;AACA,QAAIC,OAAO,GAAGN,QAAQ,CAACG,IAAT,CAAcI,UAAd,IAA4B,EAA1C;AAEAZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,mBADD;AAELgB,MAAAA,QAAQ,EAAEF,OAFL;AAGLI,MAAAA;AAHK,KAAD,CAAR;AAKH,GAhBD,CAgBE,OAAME,GAAN,EAAW;AACTb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGA,UAAMmB,GAAN;AACH;;AAAA;AACJ,CAvBD;;AAyBA,MAAMC,gBAAgB,GAAG,OAAOd,QAAP,EAAiBe,SAAjB,KAA+B;AACpD,MAAG;AACCf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGA,UAAMQ,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,UAASiB,SAAU,EAA3B,CAA1B;AACA,UAAMV,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAvB;AAEA;AAEAN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,0BADD;AAELoB,MAAAA,aAAa,EAAEX,QAAQ,CAACG,IAFnB;AAGLG,MAAAA,OAAO,EAAEN,QAAQ,CAACG,IAAT,CAAcI;AAHlB,KAAD,CAAR;AAKH,GAdD,CAcE,OAAMC,GAAN,EAAU;AACRb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL;AADD,KAAD,CAAR;AAGH;;AAAA;AACJ,CApBD;;AAsBA,SAAQE,WAAR,EAAqBe,gBAArB","sourcesContent":["import {\n    START_GET_PRODUCTS,\n    SUCCES_GET_PRODUCTS,\n    ERROR_GET_PRODUCTS,\n    START_GET_PRODUCT_DETAILS,\n    SUCCES_GET_PRODUCT_DETAILS,\n    ERROR_GET_PRODUCT_DETAILS\n} from '../actiontypes/index';\n\nconst url = 'http://localhost:8080';\n\nconst getProducts = async (dispatch, searchText) => {\n    try{\n        dispatch({\n            type: START_GET_PRODUCTS\n        });\n        const result = await fetch(`${url}/items?q=${searchText}`);\n        const response = await result.json();\n\n        // always only save first 4 elements on the store\n        const results = response.data.products.slice(0, 4);\n        let filters = response.data.categories || [];\n\n        dispatch({\n            type: SUCCES_GET_PRODUCTS,\n            products: results,\n            filters\n        });\n    } catch(err) {\n        dispatch({\n            type: ERROR_GET_PRODUCTS\n        });\n        throw err;\n    };\n}\n\nconst getProductDetail = async (dispatch, productId) => {\n    try{\n        dispatch({\n            type: START_GET_PRODUCT_DETAILS,\n        });\n        const result = await fetch(`${url}/items/${productId}`);\n        const response = await result.json();\n\n        debugger;\n        \n        dispatch({\n            type: SUCCES_GET_PRODUCT_DETAILS,\n            productDetail: response.data,\n            filters: response.data.categories\n        });\n    } catch(err){\n        dispatch({\n            type: ERROR_GET_PRODUCT_DETAILS\n        });\n    };    \n}\n\nexport {getProducts, getProductDetail};\n"]},"metadata":{},"sourceType":"module"}