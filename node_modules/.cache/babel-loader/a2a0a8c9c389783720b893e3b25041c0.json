{"ast":null,"code":"import { createStore } from 'redux';\nimport Immutable from 'seamless-immutable';\nimport { START_GET_PRODUCTS, SUCCES_GET_PRODUCTS, ERROR_GET_PRODUCTS, START_GET_PRODUCT_DETAILS, SUCCES_GET_PRODUCT_DETAILS, ERROR_GET_PRODUCT_DETAILS } from '../actiontypes/index';\nconst initialState = Immutable({\n  loading: false,\n  products: [],\n  filters: [],\n  productDetail: {\n    author: {},\n    item: {\n      price: {}\n    }\n  }\n});\n\nconst productsStore = (state = initialState, action) => {\n  switch (action.type) {\n    case SUCCES_GET_PRODUCTS:\n      return state.merge({\n        products: action.products,\n        filters: action.filters,\n        loading: false\n      });\n\n    case START_GET_PRODUCTS:\n      return state.merge({\n        loading: true\n      });\n\n    case ERROR_GET_PRODUCTS:\n      return state.merge({\n        loading: false\n      });\n\n    case SUCCES_GET_PRODUCT_DETAILS:\n      return state.merge({\n        productDetail: action.productDetail,\n        loading: false\n      });\n\n    case START_GET_PRODUCT_DETAILS:\n      return state.merge({\n        loading: true\n      });\n\n    case ERROR_GET_PRODUCT_DETAILS:\n      return state.merge({\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(productsStore);\nexport default store;","map":{"version":3,"sources":["/home/rodrigo/Escritorio/meli/meli-app/src/reducers/index.js"],"names":["createStore","Immutable","START_GET_PRODUCTS","SUCCES_GET_PRODUCTS","ERROR_GET_PRODUCTS","START_GET_PRODUCT_DETAILS","SUCCES_GET_PRODUCT_DETAILS","ERROR_GET_PRODUCT_DETAILS","initialState","loading","products","filters","productDetail","author","item","price","productsStore","state","action","type","merge","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,yBAJJ,EAKIC,0BALJ,EAMIC,yBANJ,QAOO,sBAPP;AASA,MAAMC,YAAY,GAAGP,SAAS,CAAC;AAC3BQ,EAAAA,OAAO,EAAE,KADkB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,OAAO,EAAE,EAHkB;AAI3BC,EAAAA,aAAa,EAAE;AAACC,IAAAA,MAAM,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAC;AAACC,MAAAA,KAAK,EAAC;AAAP;AAAlB;AAJY,CAAD,CAA9B;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhB,mBAAL;AACI,aAAOc,KAAK,CAACG,KAAN,CAAY;AACfV,QAAAA,QAAQ,EAAEQ,MAAM,CAACR,QADF;AAEfC,QAAAA,OAAO,EAAEO,MAAM,CAACP,OAFD;AAGfF,QAAAA,OAAO,EAAE;AAHM,OAAZ,CAAP;;AAKJ,SAAKP,kBAAL;AACI,aAAOe,KAAK,CAACG,KAAN,CAAY;AACfX,QAAAA,OAAO,EAAE;AADM,OAAZ,CAAP;;AAGJ,SAAKL,kBAAL;AACI,aAAOa,KAAK,CAACG,KAAN,CAAY;AACfX,QAAAA,OAAO,EAAE;AADM,OAAZ,CAAP;;AAGJ,SAAKH,0BAAL;AACI,aAAOW,KAAK,CAACG,KAAN,CAAY;AACfR,QAAAA,aAAa,EAAEM,MAAM,CAACN,aADP;AAEfH,QAAAA,OAAO,EAAE;AAFM,OAAZ,CAAP;;AAIJ,SAAKJ,yBAAL;AACI,aAAOY,KAAK,CAACG,KAAN,CAAa;AAChBX,QAAAA,OAAO,EAAE;AADO,OAAb,CAAP;;AAGJ,SAAKF,yBAAL;AACI,aAAOU,KAAK,CAACG,KAAN,CAAY;AACfX,QAAAA,OAAO,EAAE;AADM,OAAZ,CAAP;;AAGJ;AACI,aAAOQ,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,MAAMI,KAAK,GAAGrB,WAAW,CAACgB,aAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import {createStore} from 'redux';\nimport Immutable from 'seamless-immutable';\nimport {\n    START_GET_PRODUCTS,\n    SUCCES_GET_PRODUCTS,\n    ERROR_GET_PRODUCTS,\n    START_GET_PRODUCT_DETAILS,\n    SUCCES_GET_PRODUCT_DETAILS,\n    ERROR_GET_PRODUCT_DETAILS\n} from '../actiontypes/index';\n\nconst initialState = Immutable({\n    loading: false,\n    products: [],\n    filters: [],\n    productDetail: {author: {}, item:{price:{}}}\n});\n\nconst productsStore = (state = initialState, action) => {\n    switch(action.type) {\n        case SUCCES_GET_PRODUCTS:\n            return state.merge({\n                products: action.products,\n                filters: action.filters,\n                loading: false\n            });\n        case START_GET_PRODUCTS:\n            return state.merge({\n                loading: true\n            });\n        case ERROR_GET_PRODUCTS:\n            return state.merge({\n                loading: false\n            });\n        case SUCCES_GET_PRODUCT_DETAILS:\n            return state.merge({\n                productDetail: action.productDetail,\n                loading: false\n            });\n        case START_GET_PRODUCT_DETAILS:\n            return state.merge ({\n                loading: true\n            });\n        case ERROR_GET_PRODUCT_DETAILS:\n            return state.merge({\n                loading: false\n            });\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(productsStore);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}